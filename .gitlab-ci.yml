variables:
  API_TOKEN: $TEST_DEPLOYMENT_TOKEN
  APP_PATH: '$CI_PROJECT_DIR'
  API_PATH: ''
  OUTPUT_PATH: 'out'
  REDIRECT_URI: 'https://thankful-dune-0fbe9e810.1.azurestaticapps.net/login/'
  POST_LOGOUT_REDIRECT_URI: 'https://thankful-dune-0fbe9e810.1.azurestaticapps.net/login/'
  REDIRECT_URI_INVITATION: 'https://thankful-dune-0fbe9e810.1.azurestaticapps.net/signup/'
  SIGNIN_POLICY: 'https://staging-identity.speechmatics.com/staging-identity.speechmatics.com/B2C_1A_SIGNIN_ONLY'
  INVITATION_SIGNUP_POLICY: 'https://staging-identity.speechmatics.com/staging-identity.speechmatics.com/B2C_1A_SIGNUP_INVITATION'
  RESET_PASSWORD_POLICY: 'https://staging-identity.speechmatics.com/staging-identity.speechmatics.com/B2C_1A_PASSWORDRESET'
  AUTHORITY_DOMAIN: 'staging-identity.speechmatics.com'
  POLICY_DOMAIN: 'staging-identity.speechmatics.com'
  AUTH_CLIENT_ID: '75a2952e-954e-4975-8a14-ef862a8e5a39'
  ENDPOINT_API_URL: 'https://staging-mp.speechmatics.com/v1'
  DEFAULT_B2C_SCOPE: 'https://staging-identity.speechmatics.com/michaltestapi/User.Read'
  CHARGIFY_PUBLIC_KEY: 'chjs_dv9b2hv745b3dc5knfkddy64'
  CHARGIFY_SERVER_HOST: 'https://speechmatics-staging.chargify.com'
  TEST_ENV: "my env test is here"

env-load:
  stage: build
  script:
    - |
        echo 
        REDIRECT_URI=${REDIRECT_URI}
        POST_LOGOUT_REDIRECT_URI=${POST_LOGOUT_REDIRECT_URI}
        REDIRECT_URI_INVITATION=${REDIRECT_URI_INVITATION}
        SIGNIN_POLICY=${SIGNIN_POLICY}
        INVITATION_SIGNUP_POLICY=${INVITATION_SIGNUP_POLICY}
        RESET_PASSWORD_POLICY=${RESET_PASSWORD_POLICY}
        AUTHORITY_DOMAIN=${AUTHORITY_DOMAIN}
        POLICY_DOMAIN=${POLICY_DOMAIN}
        AUTH_CLIENT_ID=${AUTH_CLIENT_ID}
        ENDPOINT_API_URL=${ENDPOINT_API_URL}
        DEFAULT_B2C_SCOPE=${DEFAULT_B2C_SCOPE}
        CHARGIFY_PUBLIC_KEY=${CHARGIFY_PUBLIC_KEY}
        CHARGIFY_SERVER_HOST=${CHARGIFY_SERVER_HOST}
        TEST_ENV=${TEST_ENV}
        >> .env
  only:
    - ci-test

test:
  stage: test
  script: cat .env
  only:
    - ci-test

deploy:
  stage: deploy
  image: registry.gitlab.com/static-web-apps/azure-static-web-apps-deploy
  script:
    - echo "App deployed successfully."
  only:
    - ci-test
